servers = (
  {
    address = "irc.freenode.net";
    chatnet = "FreeNode";
    port = "6667";
    use_ssl = "no";
    autoconnect = "yes";
  },
  {
    address = "localhost";
    chatnet = "BitlBee";
    port = "6667";
    use_ssl = "no";
    autoconnect = "yes";
  }
);

chatnets = { FreeNode = { type = "IRC"; }; BitlBee = { type = "IRC"; }; };
channels = ( );

aliases = {
  J = "join";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  UPTIME = "eval exec - expr `date +%s` - \\$F | awk '{print \"Irssi uptime: \"int(\\\\\\$1/3600/24)\"d \"int(\\\\\\$1/3600%24)\"h \"int(\\\\\\$1/60%60)\"m \"int(\\\\\\$1%60)\"s\" }'";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  toilet = "exec -o - toilet --irc";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "NAME";
    user_name = "somebody";
    nick = "PSoBI";
    timestamp_format = "[%H:%M:%S]";
    log_timestamp = "[%H:%M:%S] ";
  };
  "irc/dcc" = {
    dcc_port = "3699";
    dcc_own_ip = "";
    dcc_download_path = "~/Download";
    dcc_autoget = "yes";
  };
  "irc/core" = {
    alternate_nick = "alt_nick";
    usermode = "+iwx";
    lag_max_before_disconnect = "1min";
    join_auto_chans_on_invite = "no";
    channels_rejoin_unavailable = "no";
    opermode = "+abciklorsuwxyz";
  };
  "fe-common/core" = {
    theme = "void";
    autolog = "yes";
    autolog_path = "~/logs/$0.log";
    bell_beeps = "yes";
    autocreate_query_level = "DCCMSGS";
    term_charset = "UTF-8";
    window_check_level_first = "yes";
    window_default_level = "ALL -JOINS -PARTS -QUITS";
    activity_hide_level = "QUITS JOINS PARTS KICKS MODES TOPIC NICKS";
  };
  "perl/core/scripts" = {
    kicks_configuration = "~/.irssi/kicks";
    ascii_figlet_path = "/usr/bin/figlet";
    nicklist_height = "21";
    nicklist_width = "15";
    nicklist_automode = "fifo";
  };
  "fe-text" = { actlist_sort = "refnum"; };
};
logs = { };
windows = {
  1 = {
    immortal = "yes";
    name = "(status)";
    level = "ALL -JOINS -PARTS -QUITS";
  };
  2 = {
    immortal = "yes";
    name = "(junk)";
    level = "-ALL JOINS PARTS QUITS";
  };
};
mainwindows = { 1 = { first_line = "1"; lines = "26"; }; };
keyboard = (
  { key = "^[[[B"; id = "command"; data = "nicklist scroll -10"; },
  { key = "^[[[C"; id = "command"; data = "nicklist scroll +10"; }
);
ignores = (
  {
    mask = "*@c-76-21-13-118.hsd1.ca.comcast.net";
    level = "JOINS QUITS";
  },
  { mask = "*@208.80.69.166"; level = "JOINS PARTS"; }
);
